using PKHeX.Core;
using System;
using System.Collections;
using System.Collections.Generic;
using static System.Runtime.InteropServices.JavaScript.JSType;

namespace PkCompletionist.Core;

internal class CompletionValidator7_Shuffle : CompletionValidatorX
{
    public CompletionValidator7_Shuffle(Command command, SAV7_Shuffle sav, Objective objective) : base(command, sav, objective)
    {
        this.sav = sav;

    }
    new SAV7_Shuffle sav;

    private List<int> UNOBTAINABLE_MONS = new List<int> { 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 789, 793, 794, 802, 813, 825, 828, 829, 838, 859, 862, 912, 913 };

    private Dictionary<int,int> MON_ID_TO_SPECIES = new Dictionary<int, int> {
       {1, 1}, {783, 1}, {2, 2}, {3, 3}, {4, 4}, {784, 4}, {5, 5}, {6, 6}, {868, 6}, {7, 7}, {785, 7}, {8, 8}, {9, 9}, {16, 16}, {17, 17}, {18, 18}, {736, 677}, {737, 678}, {738, 678}, {172, 172}, {25, 25}, {786, 25}, {787, 25}, {788, 25}, {790, 25}, {791, 25}, {792, 25}, {795, 25}, {796, 25}, {797, 25}, {798, 25}, {799, 25}, {869, 25}, {870, 25}, {871, 25}, {872, 25}, {873, 25}, {874, 25}, {875, 25}, {876, 25}, {877, 25}, {878, 25}, {888, 25}, {889, 25}, {890, 25}, {879, 25}, {880, 25}, {881, 25}, {882, 25}, {883, 25}, {884, 25}, {885, 25}, {886, 25}, {887, 25}, {917, 25}, {918, 25}, {919, 25}, {920, 25}, {921, 25}, {922, 25}, {26, 26}, {800, 26}, {923, 26}, {175, 175}, {176, 176}, {812, 176}, {503, 468}, {842, 468}, {473, 438}, {185, 185}, {133, 133}, {134, 134}, {135, 135}, {136, 136}, {196, 196}, {197, 197}, {505, 470}, {506, 471}, {760, 700}, {573, 531}, {848, 531}, {386, 359}, {551, 509}, {552, 510}, {179, 179}, {180, 180}, {181, 181}, {514, 479}, {515, 479}, {516, 479}, {517, 479}, {518, 479}, {519, 479}, {475, 440}, {113, 113}, {806, 113}, {269, 242}, {821, 242}, {360, 333}, {361, 334}, {258, 231}, {259, 232}, {241, 214}, {29, 29}, {30, 30}, {31, 31}, {32, 32}, {33, 33}, {34, 34}, {462, 427}, {463, 428}, {767, 707}, {115, 115}, {325, 298}, {183, 183}, {184, 184}, {814, 184}, {37, 37}, {926, 37}, {38, 38}, {927, 38}, {613, 570}, {614, 571}, {658, 607}, {659, 608}, {660, 609}, {468, 433}, {385, 358}, {744, 684}, {860, 684}, {745, 685}, {861, 685}, {340, 313}, {341, 314}, {329, 302}, {827, 302}, {310, 283}, {311, 284}, {482, 447}, {483, 448}, {303, 276}, {304, 277}, {79, 79}, {80, 80}, {199, 199}, {52, 52}, {930, 52}, {53, 53}, {931, 53}, {249, 222}, {488, 453}, {489, 454}, {279, 252}, {822, 252}, {280, 253}, {281, 254}, {282, 255}, {823, 255}, {283, 256}, {284, 257}, {285, 258}, {824, 258}, {286, 259}, {287, 260}, {131, 131}, {615, 572}, {616, 573}, {625, 582}, {851, 582}, {626, 583}, {627, 584}, {476, 441}, {661, 610}, {662, 611}, {663, 612}, {761, 701}, {909, 701}, {451, 418}, {452, 419}, {330, 303}, {92, 92}, {93, 93}, {94, 94}, {805, 94}, {891, 94}, {104, 104}, {105, 105}, {938, 105}, {147, 147}, {148, 148}, {149, 149}, {758, 698}, {759, 699}, {670, 619}, {671, 620}, {388, 361}, {831, 361}, {389, 362}, {832, 362}, {513, 478}, {343, 316}, {344, 317}, {268, 241}, {762, 702}, {588, 546}, {849, 546}, {589, 547}, {850, 547}, {590, 548}, {591, 549}, {471, 436}, {472, 437}, {636, 587}, {123, 123}, {239, 212}, {763, 703}, {863, 703}, {580, 538}, {581, 539}, {254, 227}, {252, 225}, {820, 225}, {669, 618}, {200, 200}, {464, 429}, {142, 142}, {144, 144}, {145, 145}, {146, 146}, {270, 243}, {271, 244}, {272, 245}, {525, 485}, {776, 716}, {910, 716}, {777, 717}, {911, 717}, {150, 150}, {892, 150}, {151, 151}, {409, 382}, {410, 382}, {411, 383}, {412, 383}, {413, 384}, {833, 384}, {450, 417}, {384, 357}, {604, 561}, {83, 83}, {672, 621}, {703, 647}, {704, 647}, {708, 650}, {853, 650}, {709, 651}, {710, 652}, {711, 653}, {854, 653}, {712, 654}, {713, 655}, {714, 656}, {855, 656}, {715, 657}, {716, 658}, {856, 658}, {481, 446}, {143, 143}, {95, 95}, {235, 208}, {262, 235}, {687, 636}, {688, 637}, {376, 349}, {377, 350}, {288, 261}, {289, 262}, {611, 568}, {612, 569}, {484, 449}, {904, 449}, {485, 450}, {905, 450}, {398, 371}, {399, 372}, {400, 373}, {733, 674}, {734, 675}, {605, 562}, {606, 563}, {620, 577}, {621, 578}, {622, 579}, {739, 679}, {740, 680}, {741, 681}, {571, 529}, {572, 530}, {273, 246}, {274, 247}, {275, 248}, {894, 248}, {380, 353}, {381, 354}, {678, 627}, {679, 628}, {772, 712}, {773, 713}, {236, 209}, {818, 209}, {237, 210}, {819, 210}, {108, 108}, {498, 463}, {574, 532}, {575, 533}, {576, 534}, {114, 114}, {500, 465}, {706, 649}, {707, 649}, {345, 318}, {346, 319}, {354, 327}, {453, 420}, {839, 420}, {454, 421}, {840, 421}, {278, 251}, {127, 127}, {242, 215}, {496, 461}, {404, 377}, {405, 378}, {406, 379}, {230, 203}, {379, 352}, {396, 369}, {240, 213}, {477, 442}, {533, 492}, {534, 492}, {536, 494}, {564, 522}, {565, 523}, {527, 487}, {528, 487}, {523, 483}, {524, 484}, {336, 309}, {337, 310}, {261, 234}, {597, 554}, {598, 555}, {530, 489}, {843, 489}, {531, 490}, {844, 490}, {537, 495}, {845, 495}, {538, 496}, {539, 497}, {540, 498}, {846, 498}, {541, 499}, {542, 500}, {543, 501}, {847, 501}, {544, 502}, {545, 503}, {387, 360}, {229, 202}, {893, 202}, {351, 324}, {362, 335}, {363, 336}, {397, 370}, {414, 385}, {535, 493}, {529, 488}, {735, 676}, {120, 120}, {121, 121}, {478, 443}, {479, 444}, {480, 445}, {722, 664}, {723, 665}, {724, 666}, {908, 666}, {425, 396}, {426, 397}, {427, 398}, {764, 704}, {765, 705}, {766, 706}, {617, 574}, {618, 575}, {619, 576}, {474, 439}, {122, 122}, {307, 280}, {308, 281}, {309, 282}, {896, 282}, {510, 475}, {689, 638}, {690, 639}, {691, 640}, {532, 491}, {490, 455}, {276, 249}, {277, 250}, {895, 250}, {779, 719}, {914, 719}, {327, 300}, {328, 301}, {826, 301}, {650, 599}, {651, 600}, {652, 601}, {334, 307}, {335, 308}, {407, 380}, {408, 381}, {41, 41}, {42, 42}, {169, 169}, {770, 710}, {864, 710}, {771, 711}, {865, 711}, {382, 355}, {383, 356}, {512, 477}, {88, 88}, {935, 88}, {89, 89}, {936, 89}, {305, 278}, {306, 279}, {677, 626}, {675, 624}, {676, 625}, {682, 631}, {683, 632}, {599, 556}, {233, 206}, {238, 211}, {692, 641}, {693, 641}, {694, 642}, {695, 642}, {698, 645}, {699, 645}, {435, 406}, {342, 315}, {436, 407}, {837, 407}, {66, 66}, {67, 67}, {68, 68}, {432, 403}, {433, 404}, {434, 405}, {320, 293}, {321, 294}, {322, 295}, {742, 682}, {743, 683}, {526, 486}, {415, 386}, {903, 386}, {902, 386}, {901, 386}, {416, 387}, {834, 387}, {417, 388}, {418, 389}, {419, 390}, {835, 390}, {420, 391}, {421, 392}, {422, 393}, {836, 393}, {423, 394}, {424, 395}, {746, 686}, {747, 687}, {731, 672}, {732, 673}, {646, 595}, {647, 596}, {719, 661}, {720, 662}, {721, 663}, {349, 322}, {350, 323}, {566, 524}, {567, 525}, {568, 526}, {19, 19}, {915, 19}, {20, 20}, {916, 20}, {494, 459}, {841, 459}, {495, 460}, {728, 669}, {857, 669}, {729, 670}, {858, 670}, {730, 671}, {559, 517}, {560, 518}, {84, 84}, {85, 85}, {645, 594}, {331, 304}, {332, 305}, {333, 306}, {170, 170}, {171, 171}, {680, 629}, {681, 630}, {137, 137}, {260, 233}, {509, 474}, {167, 167}, {168, 168}, {577, 535}, {578, 536}, {579, 537}, {326, 299}, {511, 476}, {323, 296}, {324, 297}, {174, 174}, {39, 39}, {803, 39}, {40, 40}, {804, 40}, {247, 220}, {248, 221}, {508, 473}, {469, 434}, {470, 435}, {234, 207}, {507, 472}, {696, 643}, {697, 644}, {700, 646}, {701, 646}, {702, 646}, {13, 13}, {14, 14}, {15, 15}, {161, 161}, {162, 162}, {102, 102}, {103, 103}, {937, 103}, {491, 456}, {492, 457}, {553, 511}, {554, 512}, {555, 513}, {556, 514}, {557, 515}, {558, 516}, {58, 58}, {59, 59}, {81, 81}, {82, 82}, {497, 462}, {198, 198}, {465, 430}, {390, 363}, {391, 364}, {392, 365}, {486, 451}, {487, 452}, {673, 622}, {674, 623}, {756, 696}, {757, 697}, {46, 46}, {47, 47}, {243, 216}, {244, 217}, {352, 325}, {353, 326}, {109, 109}, {110, 110}, {594, 551}, {595, 552}, {596, 553}, {768, 708}, {769, 709}, {56, 56}, {57, 57}, {21, 21}, {22, 22}, {265, 238}, {124, 124}, {138, 138}, {139, 139}, {140, 140}, {141, 141}, {129, 129}, {807, 129}, {130, 130}, {808, 130}, {43, 43}, {44, 44}, {45, 45}, {182, 182}, {128, 128}, {63, 63}, {64, 64}, {65, 65}, {774, 714}, {775, 715}, {255, 228}, {256, 229}, {231, 204}, {232, 205}, {163, 163}, {164, 164}, {520, 480}, {521, 481}, {522, 482}, {173, 173}, {35, 35}, {801, 35}, {36, 36}, {628, 585}, {629, 585}, {630, 585}, {631, 585}, {632, 586}, {633, 586}, {634, 586}, {635, 586}, {778, 718}, {866, 718}, {867, 718}, {54, 54}, {55, 55}, {193, 193}, {504, 469}, {297, 270}, {298, 271}, {299, 272}, {466, 431}, {467, 432}, {602, 559}, {603, 560}, {748, 688}, {749, 689}, {266, 239}, {125, 125}, {501, 466}, {267, 240}, {126, 126}, {502, 467}, {177, 177}, {178, 178}, {355, 328}, {356, 329}, {357, 330}, {455, 422}, {456, 422}, {457, 423}, {458, 423}, {546, 504}, {547, 505}, {750, 690}, {751, 691}, {111, 111}, {112, 112}, {499, 464}, {203, 201}, {205, 201}, {209, 201}, {214, 201}, {227, 201}, {228, 201}, {393, 366}, {394, 367}, {395, 368}, {437, 408}, {438, 409}, {439, 410}, {440, 411}, {717, 659}, {718, 660}, {116, 116}, {117, 117}, {257, 230}, {245, 218}, {246, 219}, {358, 331}, {359, 332}, {448, 415}, {449, 416}, {684, 633}, {685, 634}, {686, 635}, {364, 337}, {365, 338}, {378, 351}, {830, 351}, {897, 351}, {898, 351}, {899, 351}, {493, 458}, {253, 226}, {263, 236}, {106, 106}, {107, 107}, {264, 237}, {641, 592}, {642, 592}, {643, 593}, {644, 593}, {96, 96}, {97, 97}, {656, 605}, {657, 606}, {90, 90}, {91, 91}, {561, 519}, {562, 520}, {563, 521}, {906, 521}, {152, 152}, {809, 152}, {153, 153}, {154, 154}, {155, 155}, {810, 155}, {156, 156}, {157, 157}, {158, 158}, {811, 158}, {159, 159}, {160, 160}, {74, 74}, {932, 74}, {75, 75}, {933, 75}, {76, 76}, {934, 76}, {60, 60}, {61, 61}, {62, 62}, {186, 186}, {314, 287}, {315, 288}, {316, 289}, {585, 543}, {586, 544}, {587, 545}, {100, 100}, {101, 101}, {86, 86}, {87, 87}, {653, 602}, {654, 603}, {655, 604}, {780, 720}, {781, 720}, {190, 190}, {459, 424}, {582, 540}, {583, 541}, {584, 542}, {312, 285}, {313, 286}, {607, 564}, {608, 565}, {609, 566}, {610, 567}, {347, 320}, {348, 321}, {441, 412}, {442, 412}, {443, 412}, {444, 413}, {445, 413}, {446, 413}, {447, 414}, {428, 399}, {429, 400}, {648, 597}, {649, 598}, {370, 343}, {371, 344}, {754, 694}, {755, 695}, {317, 290}, {318, 291}, {319, 292}, {300, 273}, {301, 274}, {302, 275}, {401, 374}, {402, 375}, {403, 376}, {900, 376}, {460, 425}, {461, 426}, {191, 191}, {192, 192}, {705, 648}, {907, 648}, {548, 506}, {549, 507}, {550, 508}, {664, 613}, {852, 613}, {665, 614}, {69, 69}, {70, 70}, {71, 71}, {187, 187}, {815, 187}, {188, 188}, {816, 188}, {189, 189}, {817, 189}, {372, 345}, {373, 346}, {374, 347}, {375, 348}, {725, 667}, {726, 668}, {727, 668}, {368, 341}, {369, 342}, {637, 588}, {638, 589}, {667, 616}, {668, 617}, {569, 527}, {570, 528}, {639, 590}, {640, 591}, {165, 165}, {166, 166}, {72, 72}, {73, 73}, {290, 263}, {291, 264}, {27, 27}, {924, 27}, {28, 28}, {925, 28}, {366, 339}, {367, 340}, {782, 721}, {338, 311}, {339, 312}, {118, 118}, {119, 119}, {98, 98}, {99, 99}, {77, 77}, {78, 78}, {23, 23}, {24, 24}, {623, 580}, {624, 581}, {752, 692}, {753, 693}, {292, 265}, {293, 266}, {294, 267}, {295, 268}, {296, 269}, {50, 50}, {928, 50}, {51, 51}, {929, 51}, {132, 132}, {939, 722}, {940, 723}, {941, 724}, {942, 725}, {943, 726}, {944, 727}, {945, 728}, {946, 729}, {947, 730}, {958, 741}, {959, 741}, {960, 741}, {961, 741}, {973, 753}, {974, 754}, {966, 746}, {995, 775}, {985, 765}, {986, 766}, {977, 757}, {978, 758}, {997, 777}, {998, 778}, {971, 751}, {972, 752}, {964, 744}, {965, 745}, {1009, 789}, {1010, 790}, {1011, 791}, {1012, 792}, {1021, 801}, {969, 749}, {970, 750}, {991, 771}, {953, 736}, {954, 737}, {955, 738}, {956, 739}, {957, 740}, {981, 761}, {982, 762}, {983, 763}, {10, 10}, {11, 11}, {12, 12}, {48, 48}, {49, 49}, {250, 223}, {251, 224}, {600, 557}, {601, 558}, {592, 550}, {593, 550}, {1005, 785}, {1006, 786}, {1007, 787}, {1008, 788}, {430, 401}, {431, 402}, {666, 615}, {948, 731}, {949, 732}, {950, 733}, {1000, 780}, {1013, 793}, {1014, 794}, {1015, 795}, {1016, 796}, {1017, 797}, {1018, 798}, {1019, 799}, {992, 772}, {993, 773}, {996, 776}, {1001, 781}, {989, 769}, {990, 770}, {1020, 800}, {962, 742}, {963, 743}, {975, 755}, {976, 756}, {967, 747}, {968, 748}, {194, 194}, {195, 195}, {979, 759}, {980, 760}, {994, 774}, {1002, 782}, {1003, 783}, {1004, 784}, {987, 767}, {988, 768}, {984, 764}, {951, 734}, {952, 735}, {999, 779}, {1022, 802}
    };


    public override void GenerateAll()
    {
        Generate_pokemon();
        Generate_missionCard();
        Generate_enhancement();
        Generate_megaStone();
        Generate_misc();
    }

    public override void Generate_pokemon()
    {
        var ow = new Dictionary<string, bool>();
        owned["pokemon"] = ow;

        for (int i = 1; i <= 1022; i++) 
        {
            if (UNOBTAINABLE_MONS.Contains(i))
                continue;
            ow[i.ToString()] = sav.HasMon(i);
        }
    }

    public void Generate_missionCard()
    {
        var ow = new Dictionary<string, bool>();
        owned["missionCard"] = ow;

        for (int i = 1; i <= 19; i++)
            ow[i.ToString()] = sav.HasCompletedMissionCard(i - 1);
    }

    public void Generate_enhancement()
    {
        var ow = new Dictionary<string, bool>();
        owned["enhancement"] = ow;

        ow["MegaSpeedup"] = sav.GetEnhancementCount(Enhancement.MegaSpeedup) > 0;
        ow["RaiseMaxLevel"] = sav.GetEnhancementCount(Enhancement.RaiseMaxLevel) > 0;
        ow["LevelUp"] = sav.GetEnhancementCount(Enhancement.LevelUp) > 0;
        ow["ExpBoosterS"] = sav.GetEnhancementCount(Enhancement.ExpBoosterS) > 0;
        ow["ExpBoosterM"] = sav.GetEnhancementCount(Enhancement.ExpBoosterM) > 0;
        ow["ExpBoosterL"] = sav.GetEnhancementCount(Enhancement.ExpBoosterL) > 0;
        ow["SkillBoosterS"] = sav.GetEnhancementCount(Enhancement.SkillBoosterS) > 0;
        ow["SkillBoosterM"] = sav.GetEnhancementCount(Enhancement.SkillBoosterM) > 0;
        ow["SkillBoosterL"] = sav.GetEnhancementCount(Enhancement.SkillBoosterL) > 0;
        ow["SkillSwapper"] = sav.GetEnhancementCount(Enhancement.SkillSwapper) > 0;
    }

    public void Generate_megaStone()
    {
        var ow = new Dictionary<string, bool>();
        owned["megaStone"] = ow;

        var MEGA_LIST = new List<int> { 3, 6, 9, 18, 573, 386, 181, 361, 241, 463, 115, 329, 483, 80, 281, 284, 287, 330, 94, 389, 239, 142, 150, 413, 235, 400, 275, 381, 346, 127, 337, 480, 309, 510, 779, 335, 407, 408, 350, 495, 333, 15, 130, 65, 256, 403 } ;

        foreach(var mega in MEGA_LIST)
            ow[mega.ToString() + "-0"] = sav.HasMegaStone(mega);

        ow["6-1"] = sav.HasMegaStone(6, 1); // Charizard Y
        ow["150-1"] = sav.HasMegaStone(150, 1); // Mewtwo Y
    }

    public void Generate_misc()
    {
        var ow = new Dictionary<string, bool>();
        owned["misc"] = ow;

        //survival60stages: untrackable
        //allSRankSpecialStages: TODO
        ow["maxTrainerRank"] = GetSpeciesObtainedCount() >= 802;
    }
    public int GetSpeciesObtainedCount()
    {
        var set = new HashSet<int>();
        foreach (var pair in MON_ID_TO_SPECIES)
        {
            if (sav.HasMon(pair.Key))
                set.Add(pair.Value);
        }
        return set.Count;
    }
}
